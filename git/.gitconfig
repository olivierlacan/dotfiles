[user]
	name = Olivier Lacan
	email = hi@olivierlacan.com
  signingkey = 1FF9AF6D
[push]
	default = simple
[credential]
	helper = osxkeychain
[url "https://github.com/"]
  insteadOf = git://github.com/
[gpg]
  program = /usr/local/bin/gpg
[diff]
  compactionHeuristic = true
	guitool = ksdiff
	tool = Kaleidoscope
[core]
  excludesfile = ~/.gitignore
	editor = sublime -w -n
	attributesfile = /Users/olivierlacan/.gitattributes

[commit]
  template = ~/.gitmessage

[alias]
  # one-line log
  l = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  lc = rev-list --count HEAD ^main
  a = add

  bl = branch --sort=-committerdate
  br = 'branch --sort=-committerdate --format="%(committerdate:relative)%09%(refname:short)"'

  c = commit
  ca = commit --amend
  can = commit --amend --no-edit
  cs = commit --gpg-sign
  cv = commit --verbose

  d = diff
  ds = diff --staged

  s = status
  r = remote
  rr = remote rename

  b = branch
  br = branch --sort=-committerdate
  bd = branch -D

  m = merge

  p = pull
  pu = push
  puf = push --force-with-lease
  pup = push production
  rb = pull --rebase
  rc = rebase --continue
  ra = rebase --abort
  rh = reset --hard

  
  rum = "!f() { rebase upstream/${1} }; f"
  ri = rebase --interactive
  rc = rebase --continue

  co = checkout

  fo = fetch origin
  fu = fetch upstream

  sh = show
  shf = show --pretty="" --name-only

  sync = fetch origin && rebase origin/$HEAD
  purge = rm --cached

  # Git
  blastschema = !git checkout db/schema.rb

  localpurge = "!git branch --merged | grep -v '*' | grep -v \"$1\" | xargs git branch -d"

# switch to main branch, update list of remote branches, output list of
# branches that were merged into current branch, then filter out the first
# argument branch name, `production`, and `staging` which we don't want to automatically
# delete ever, then remove the "origin/" portion of the remote branch name,
# and finally run `git push origin :branch-name` on every remaining branch in
# the list which will delete them on the origin remote
  remotepurge = "!git checkout \"$1\" && git remote update --prune | git branch -r --merged | sed -e \"s/origin\\//:/\" | xargs git push origin"
  remotemainpurge = "!git checkout \"$1\" && git remote update --prune | git branch -r --merged | sed -e \"s/origin\\//:/\" | xargs git push origin"
# NOTE: something's wrong with this alias, disabling for now
# tags = "!for t in `git tag -l`; do git cat-file -p `git rev-parse $t`; done"
[rebase]
	autoStash = true
  instructionFormat = "%s [%an]"
[filter "lfs"]
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
[rerere]
  enabled = true
[pull]
	default = current
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[branch]
	autosetupmerge = always
[init]
	defaultBranch = main
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool]
	prompt = false
[merge]
	tool = Kaleidoscope
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustExitCode = true
[mergetool]
	prompt = false
