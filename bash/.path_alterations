# ==================== All modifications to $PATH ==================== #
function path {
  echo $PATH | tr ':' '\n'
}

function pathprepend {
  case ":$PATH:" in
    *":$1:"*) :;; # path entry is a duplicate
    *) PATH="$1:$PATH";; # prepending to path
  esac
}

function pathappend {
  case ":$PATH:" in
    *":$1:"*) :;; # path entry is a duplicate
    *) PATH="$PATH:$1";; # appending to path
  esac
}

# sbin path for Homebrew
pathprepend "/usr/local/sbin"

# Homebrew-installed OpenSSL
# pathprepend "$(brew --prefix openssl)/bin"

# Ruby version management with rbenv
pathappend "$HOME/.rbenv/bin"
eval "$(rbenv init -)"

# Essentially does what chruby would do for teaching purposes.
# Depends on ~/.gemrc having:
#   gem: --user-install
#export PATH="$HOME/.gem/ruby/2.6.0/bin:$PATH"
#export GEM_HOME="$HOME/.gem/ruby/2.6.0"
#export GEM_PATH="$HOME/.gem/ruby/2.6.0"

# Python version management with pyenv
if [[ -r "$HOME/.pyenv" ]]; then
  export PYENV_ROOT="$HOME/.pyenv"
  pathprepend "$PYENV_ROOT/bin"
  eval "$(pyenv init -)"
  if [[ -r "$HOME/.pyenv/plugins/pyenv-virtualenv" ]]; then
    eval "$(pyenv virtualenv-init -)"
    export PYENV_VIRTUALENV_DISABLE_PROMPT=1
  fi;
fi;

# Node.js version management with nodenv
# pathappend "$HOME/.nodenv/bin"
# eval "$(nodenv init -)"

# Composer for PHP
# pathprepend "$HOME/.composer/vendor/bin"

# nvm for Node
# -- Disabled in favor of Volta --
# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Postgres
# pathprepend "/usr/local/opt/postgresql@10/bin"

# Homebrew completion
if type brew &>/dev/null; then
  HOMEBREW_PREFIX="$(brew --prefix)"
  if [[ -r "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh" ]]; then
    source "${HOMEBREW_PREFIX}/etc/profile.d/bash_completion.sh"
  else
    for COMPLETION in "${HOMEBREW_PREFIX}/etc/bash_completion.d/"*; do
      [[ -r "$COMPLETION" ]] && source "$COMPLETION"
    done
  fi
fi

# pathprepend "/opt/metasploit-framework/bin"
pathprepend "$(brew --prefix qt@5.5)/bin"

# Volta is a Node version manager
export VOLTA_HOME="$HOME/.volta"
[ -s "$VOLTA_HOME/load.sh" ] && . "$VOLTA_HOME/load.sh"
pathprepend "$VOLTA_HOME/bin"

export LDFLAGS="-L/usr/local/opt/readline/lib $LDFLAGS"
export CPPFLAGS="-I/usr/local/opt/readline/include $CPPFLAGS"
export PKG_CONFIG_PATH="/usr/local/opt/readline/lib/pkgconfig $PKG_CONFIG_PATH"

# nvm for Node (disabled because nodenv is like rbenv and I like it)
# export NVM_DIR="$HOME/.nvm"
# [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
# [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# LLVM
export PATH="/usr/local/opt/llvm@4/bin:$PATH"
pathprepend "/usr/local/opt/llvm/bin"
export LDFLAGS="-L/usr/local/opt/llvm/lib"
export CPPFLAGS="-I/usr/local/opt/llvm/include"

# OpenSSL
export LDFLAGS="-L$(brew --prefix openssl)/lib $LDFLAGS"
export CPPFLAGS="-I$(brew --prefix openssl)/include $CPPFLAGS"
export PKG_CONFIG_PATH="$(brew --prefix openssl)/lib/pkgconfig $PKG_CONFIG_PATH"

export CONFIGURE_OPTS="--with-openssl-dir=`brew --prefix openssl`"
export RUBY_CONFIGURE_OPTS="--with-openssl-dir=`brew --prefix openssl`"

# FFI
export LDFLAGS="-L/usr/local/opt/sqlite/lib $LDFLAGS"
export CPPFLAGS="-I/usr/local/opt/libffi/include $CPPFLAGS"
export PKG_CONFIG_PATH="/usr/local/opt/libffi/lib/pkgconfig $PKG_CONFIG_PATH"
